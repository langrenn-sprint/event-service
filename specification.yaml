openapi: 3.0.3
info:
  title: Event service
  description: The event service let you administrate the main domain objects startlist and racelist
  version: '1.0'
  license:
      name: Apache 2.0
      url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /events:
    post:
      security:
      - bearerAuth: []
      description: Add a new event
      requestBody:
        description: The new event to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        201:
          description: Created
    get:
      description: Get a list of events
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCollection'
  /events/{id}:
    get:
      description: Get a unique event
      parameters:
      - name: id
        in: path
        description: event id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
  /ageclasses:
    post:
      security:
      - bearerAuth: []
      description: Add a new ageclass
      requestBody:
        description: The new ageclass to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ageclass'
      responses:
        201:
          description: Created
    get:
      description: Get a list of ageclasses
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeclassCollection'
  /ageclasses/{id}:
    get:
      description: Get a unique ageclass
      parameters:
      - name: id
        in: path
        description: ageclass id
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ageclass'
  /contestants:
    post:
      description: create new contestant
      requestBody:
        description: the new contestant to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contestant'
      responses:
        201:
          description: Created
components:
  schemas:
    AgeclassCollection:
      type: object
      properties:
        ageclasses:
          type: array
          items:
            $ref: '#/components/schemas/Ageclass'
    Ageclass:
      properties:
        id:
          type: string
        name:
          type: string
    EventCollection:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      properties:
        id:
          type: string
        name:
          type: string
        date:
          type: string
          format: date
        organiser:
          type: string
        webpage:
          type: string
          format: uri
        information:
          type: string
    Contestant:
      properties:
        id:
          description: system generated unique id
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        club:
          type: string
        minIdrettId:
          type: string
    Startlist:
      type: array
      items:
        type: object
        properties:
          raceId:
            type: string
          contestantId:
            type: string
          bib:
            type: string
          startTime:
            type: string
            format: timestamp
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
